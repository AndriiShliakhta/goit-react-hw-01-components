{"version":3,"sources":["Profile/Profile.js","Statistics/Statistics.js","FriendList/FriendList.js","TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Profile","props","className","id","tag","src","avatar","alt","name","location","stats","followers","views","likes","Statistics","title","map","item","label","percentage","FriendList","friends","friend","isOnline","width","TransactionHistory","items","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"gvGAEe,SAASA,EAAQC,GAC7B,OACK,sBAAKC,UAAU,UAAUC,GAAIF,EAAMG,IAAnC,UACI,sBAAKF,UAAU,cAAf,UACI,qBACIG,IAAKJ,EAAMK,OACXC,IAAI,gHACJL,UAAU,WAEd,mBAAGA,UAAU,OAAb,SAAqBD,EAAMO,OAC3B,oBAAGN,UAAU,MAAb,cAAqBD,EAAMG,OAC3B,mBAAGF,UAAU,WAAb,SAAyBD,EAAMQ,cAEnC,qBAAIP,UAAU,QAAd,UACI,+BACI,sBAAMA,UAAU,QAAhB,uBACA,uBAAMA,UAAU,WAAhB,cAA6BD,EAAMS,MAAMC,gBAE7C,+BACI,sBAAMT,UAAU,QAAhB,mBACA,uBAAMA,UAAU,WAAhB,cAA6BD,EAAMS,MAAME,YAE7C,+BACI,sBAAMV,UAAU,QAAhB,mBACA,uBAAMA,UAAU,WAAhB,cAA6BD,EAAMS,MAAMG,kBCvB9C,SAASC,EAAT,GAAqC,IAAhBJ,EAAe,EAAfA,MAAOK,EAAQ,EAARA,MACxC,OACK,0BAASb,UAAU,aAAnB,UACKa,GAAS,oBAAIb,UAAU,QAAd,SAAuBa,IAE7B,oBAAIb,UAAU,YAAd,SACSQ,EAAMM,KAAI,SAAAC,GACX,OAAQ,qBAAIf,UAAU,OAAd,UACI,sBAAMA,UAAU,QAAhB,SAAyBe,EAAKC,QAC9B,sBAAMhB,UAAU,aAAhB,SAA8Be,EAAKE,eAFbF,EAAKd,YCRhD,SAASiB,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OACE,oBAAInB,UAAU,cAAd,SACGmB,EAAQL,KAAI,SAAAM,GACX,OACE,qBAAIpB,UAAU,OAAd,UACE,sBAAMA,UAAU,SAAhB,SAA0BoB,EAAOC,WACjC,qBACErB,UAAU,SACVG,IAAKiB,EAAOhB,OACZC,IAAI,mDACJiB,MAAM,OAER,mBAAGtB,UAAU,OAAb,SAAqBoB,EAAOd,SARJc,EAAOnB,SCL5B,SAASsB,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAC3C,OACE,wBAAOxB,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAGJ,gCACGwB,EAAMV,KAAI,SAAAC,GACT,OACE,+BACE,6BAAKA,EAAKU,OACV,6BAAKV,EAAKW,SACV,6BAAKX,EAAKY,aAHHZ,EAAKd,YCNX,SAAS2B,EAAI7B,GAC1B,OACE,qCACE,cAACD,EAAD,CACEQ,KAAMA,IACNJ,IAAKA,IACLK,SAAUA,IACVH,OAAQA,IACRI,MAAOA,MAET,cAACI,EAAD,CAAYJ,MAAOqB,IACnB,cAACX,EAAD,CAAYC,QAASA,IACrB,cAACI,EAAD,CAAoBC,MAAOM,O,YChBjCC,IAASC,OAAO,cAACJ,EAAD,IAASK,SAASC,eAAe,W","file":"static/js/main.ef6904d2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function Profile(props) {\r\n   return  (\r\n        <div className=\"profile\" id={props.tag}>\r\n            <div className=\"description\">\r\n                <img\r\n                    src={props.avatar}\r\n                    alt=\"Аватар пользователя\"\r\n                    className=\"avatar\"\r\n                />\r\n                <p className=\"name\">{props.name}</p>\r\n                <p className=\"tag\">@{props.tag}</p>\r\n                <p className=\"location\">{props.location}</p>\r\n            </div>\r\n            <ul className=\"stats\">\r\n                <li>\r\n                    <span className=\"label\">Followers</span>\r\n                    <span className=\"quantity\"> {props.stats.followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span className=\"label\">Views</span>\r\n                    <span className=\"quantity\"> {props.stats.views}</span>\r\n                </li>\r\n                <li>\r\n                    <span className=\"label\">Likes</span>\r\n                    <span className=\"quantity\"> {props.stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    stats: PropTypes.shape({\r\n        followers:PropTypes.number,\r\n        views:PropTypes.number,\r\n        likes:PropTypes.number,\r\n    }),\r\n\r\n}","import PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Statistics({stats, title}) {\r\n   return  (\r\n        <section className=\"statistics\">\r\n            {title && <h2 className=\"title\">{title}</h2>}\r\n\r\n                <ul className=\"stat-list\">\r\n                        {stats.map(item=>{\r\n                        return  <li className=\"item\" key={item.id}>\r\n                                    <span className=\"label\">{item.label}</span>\r\n                                    <span className=\"percentage\">{item.percentage}</span>\r\n                                </li>\r\n                        })}\r\n\r\n                </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        label:PropTypes.string,\r\n        percentage:PropTypes.number,\r\n    }))\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map(friend => {\r\n        return (\r\n          <li className=\"item\" key={friend.id}>\r\n            <span className=\"status\">{friend.isOnline}</span>\r\n            <img\r\n              className=\"avatar\"\r\n              src={friend.avatar}\r\n              alt=\"Аватарка\"\r\n              width=\"48\"\r\n            />\r\n            <p className=\"name\">{friend.name}</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nFriendList.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      isOnline: PropTypes.bool,\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(item => {\r\n          return (\r\n            <tr key={item.id}>\r\n              <td>{item.type}</td>\r\n              <td>{item.amount}</td>\r\n              <td>{item.currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n","import { avatar, name, tag, location, stats } from './Profile/user.json';\r\nimport statisticalData from './Statistics/statistical-data.json';\r\nimport friends from './FriendList/friends.json';\r\nimport transactions from './TransactionHistory/transactions.json';\r\nimport Profile from './Profile/Profile';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FriendList from './FriendList/FriendList';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\n\r\nexport default function App(props) {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={name}\r\n        tag={tag}\r\n        location={location}\r\n        avatar={avatar}\r\n        stats={stats}\r\n      />\r\n      <Statistics stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}